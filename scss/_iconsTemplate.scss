@font-face {
    font-family: "<%= fontName %>";
    src: url('<%= fontPath %><%= fontName %>.eot');
    src: url('<%= fontPath %><%= fontName %>.eot?#iefix') format('eot'),
    url('<%= fontPath %><%= fontName %>.woff') format('woff'),
    url('<%= fontPath %><%= fontName %>.ttf') format('truetype'),
    url('<%= fontPath %><%= fontName %>.svg#<%= fontName %>') format('svg');
}
%icon {
    font-family: "<%= fontName %>";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
    text-decoration: none;
    text-transform: none;
}

@media screen and (-webkit-min-device-pixel-ratio:0) {
    @font-face {
        font-family: "<%= fontName %>";
        src: url('<%= fontPath %><%= fontName %>.svg#<%= fontName %>') format('svg');
    }
}



$icon-codepoint: 57345; // = 0xe001 (first icon's code point)

$icon-font-family: "<%= fontName %>";

%icon-style {
    font-family: $icon-font-family;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    text-decoration: inherit;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
}

.icon-rss {
    color: #fd9f13;
}

.icon {
    @extend %icon-style;

    .icon-text {
        @extend .visuallyhidden;
    }

    &.red {
        color: #f63b38 !important;
    }

    &.green {
        color: #1bbb5b !important;
    }
}



@function icon-char($filename) {
$char: "";
<% _.each(glyphs, function(glyph) { %>
@if $filename == <%= glyph.fileName %> {
    $char: "\<%= glyph.codePoint %>";
}<% }); %>
@return $char;
}

@mixin icon($filename, $insert: before) {
    &:#{$insert} {
        @extend %icon;
        content: icon-char($filename);
    }
}

$counter: 0;
/* 
Icons

Icons are autmatically generated from SVG graphics inside <code>./icons16</code> folder. SVG graphics should be made on canvas which has height of <b>512px</b> and where gridline is set every 32px, with 4 subdivisions. 

When you create icons, in order for them to be pixel perfect in size of <b>16px</b>, you must align curves to main gridlines. If you plan to make icons for some other pixel-perfect size, you must recalculate grid and canvas size.

All graphics in SVG must follow these rules
- only vectors are included, all raster graphics are discarded
- only flat surfaces are included. All strokes must be converted to fills, use <code>Object -> Expand</code> command.
- only one color is accepted. If you plan to make hollow objects, use <code>Pathfinder -> Exclude</code> command.

<b>All generated icons</b>
Pixel perfect for sizes of <code>16px</code>, <code>32px</code>, <code>64px</code>...

<% _.each(glyphs, function(glyph) { %><i class="icon icon-<%= glyph.fileName %>" alt=".icon-<%= glyph.fileName %>" title=".icon-<%= glyph.fileName %>"></i> <% }); %>

Styleguide 1.0
*/


<% _.each(glyphs, function(glyph) { %>
$counter: $counter+1;
/* 
<%= glyph.fileName %>

Markup:
<i class="icon icon-<%= glyph.fileName %>"></i>

Styleguide 1.#{$counter} 
*/
    
.icon-<%= glyph.fileName %> {
    @include icon(<%= glyph.fileName %>); 
}
<% }); %>